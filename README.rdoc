= CCLS Home Exposures

UC Berkeley, School of Public Health, California Childhood Leukemia Study

== Requirements

* ruby >= 1.8.7 - primarily due to the liberal use of #inject
* ruby <= 1.8.7 - primarily due to ruby 1.9.1 differences
* rubygems
* ImageMagick (which may require {MacPorts}[http://www.macports.org/])
  * ImageMagick is used for image manipulation
* curl - for the initial installation of rvm
* mysql (not sqlite) - because ...
  * a manually triggered rollback in the Addressing model
  * the SubjectSearch model contains explicit MySQL code


== Required Gem Sources

 gem sources -a http://rubygems.org
 gem sources -a http://gems.github.com

== Required Gems

* {RedCloth}[http://redcloth.org] - textile parser.
* {active_shipping}[http://github.com/Shopify/active_shipping] - package tracking
* {chronic}[http://chronic.rubyforge.org] - natural language Date/Time parser. (also required for BackgrounDRb)
* {packet}[http://packet.rubyforge.org] - requirement for BackgrounDRb
* {acts_as_list}[http://github.com/ryanb/acts-as-list] - for maintaining order in all things listable
* {validatious-on-rails}[http://github.com/grimen/validatious-on-rails] - CONSIDERING the use of this javascript form validator
* {rcov}[http://github.com/relevance/rcov] - testing
* {mocha}[http://github.com/floehopper/mocha] - testing
* {autotest-rails}[http://rubyforge.org/projects/zentest] - testing
* {ZenTest}[http://www.zenspider.com/ZSS/Products/ZenTest/] - testing
* {thoughtbot-factory_girl}[http://github.com/thoughtbot/factory_girl] - testing
* {gravatar}[http://rubygems.org/gems/gravatar] - for user icons
* {will_paginate}[http://github.com/mislav/will_paginate] - for object pagination
* {rubycas-client}[http://code.google.com/p/rubycas-client/] - user authentication
* {ucb_ldap}[http://ucbrb.rubyforge.org/ucb_ldap/] - user info
* {ssl_requirement}[http://github.com/rails/ssl_requirement] - for managing https pages
* {Paperclip}[http://github.com/thoughtbot/paperclip] - for managing attachments and images
* {ccls-ccls_engine}[http://github.com/ccls/ucb_ccls_engine] - contains all of the common code used in several apps
* {jakewendt-calnet_authenticated}[http://github.com/jakewendt/calnet_authenticated] - user authentication
* {jakewendt-simply_authorized}[http://github.com/jakewendt/simply_authorized] - user authorization
* {jakewendt-rails_extension}[http://github.com/jakewendt/rails_extension]
* {jakewendt-ruby_extension}[http://github.com/jakewendt/ruby_extension] - modifications, updates and patches for ruby.
* {jrails}[http://github.com/aaronchi/jrails] (pending) - jquery helper methods (trying to not have any inline javascript so may never really use jrails' methods.)
* {jakewendt-simply_trackable}[http://github.com/jakewendt/simply_trackable] - simple plugin to track the steps in shipping, but could be used for other things
* {jakewendt-simply_pages}[http://github.com/jakewendt/simply_pages]
* {jakewendt-simply_helpful}[http://github.com/jakewendt/simply_helpful]


== Required and included plugins

* {backgroundrb}[http://github.com/gnufied/backgroundrb] - background job server and scheduler (includes minor mods to init.rb)
* {html_test}[http://github.com/peter/html_test] - html testing and validation
* {html_test_extension}[http://github.com/jakewendt/html_test_extension] - html testing and validation
* {rdoc_rails}[http://github.com/jakewendt/rdoc_rails] - simple plugin to add ActiveRecord associations to rdoc
* {Surveyor}[http://github.com/jakewendt/surveyor] - for the taking of surveys (using plugin instead of gem)



== Installation 

 #	Copy session file.
 cp config/initializers/session_store.rb.example config/initializers/session_store.rb

 #	Copy and setup database file.
 cp config/database.yml.example config/database.yml

 #	Copy and add your own FedEx credentials.
 cp config/fed_ex.yml.example config/fed_ex.yml

 #	Copy and add your own S3 credentials.
 cp config/s3.yml.example config/s3.yml

 #	Copy and add your own gmail credentials.
 cp config/initializers/mail.rb.example config/initializers/mail.rb




rvm / jruby installation ( {Installing RVM}[http://rvm.beginrescueend.com/rvm/install/] ) ...

 curl http://rvm.beginrescueend.com/releases/rvm-install-head | bash
 #	or
 sudo gem install rvm
 /usr/lib/ruby/user-gems/1.8/gems/rvm-0.1.27/bin/rvm-install

 # add ... 
 #	if [[ -s ~/.rvm/scripts/rvm ]] ; then source ~/.rvm/scripts/rvm ; fi
 # to your .bashrc
 vi .bashrc
 bash
 rvm install jruby
 rvm use jruby
 # or perhaps
 rvm --default jruby





For standard ruby users, install mysql gem ...

 #	If using mysql ...
 # On Mac OS X:
 #   sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql
 # On Mac OS X Leopard:
 #   sudo env ARCHFLAGS="-arch i386" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config
 # ... I had to install the mysql gem like so ...

 sudo env ARCHFLAGS="-arch x86_64" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config




Everybody join hands together now to install some gems ...

 #
 # Some gems require manual installation for one reason or another.
 #
 # (sudo may or may not be required or desired.
 #  Usage of sudo will/may cause gem installation in /usr/lib
 #  which may then require using sudo when running rake tasks
 #  or other things.  `gem list` and `sudo gem list` will differ.
 #  I recommend avoiding using sudo with rvm, but its your
 #  kitchen.)
 #
 gem source -a http://gemcutter.org
 gem source -a http://gems.github.com
 sudo gem install rake
 sudo gem install rdoc -v '~> 2'
 sudo gem install rails -v 2.3.11
 #
 # The rest should actually install with ...
 #
 sudo rake gems:install
 #
 # This eventually crashed with ...
 #
 #	Error: Your application used more memory than the safety cap of 500m.
 #	Specify -J-Xmx####m to increase it (#### = cap size in MB).
 #	Specify -w for full OutOfMemoryError stack trace
 #
 #    or
 #
 #  /Users/jake/.rvm/rubies/jruby-1.5.0.RC1/bin/gem:13:in `require': 
 #  load error: rubygems -- java.lang.OutOfMemoryError: Java heap space (LoadError)
 #
 # ... but a rerun continued and completed.
 #
 sudo rake gems:install
 #
 # Some gems are defined in the environments/test.rb file
 #
 sudo rake gems:install RAILS_ENV=test



 
then we continue ...

 #	Add your own session secret to config/initializers/session_store.rb
 #	generate a 128 character hex string perfect for using as your secret.
 rake secret

 rake db:migrate

 #	add some expected items (loads fixtures OVERWRITING some db data)
 rake app:update

 script/server
 script/backgroundrb start

 #	login to your app
 #	The first administrator/deputy must be created via the command line.
 #	Others can be created via the command line or web app.
 #
 rake app:deputize uid=<Your CalNet UID>


 #	Install your survey(s)
 rake surveyor FILE=surveys/he_survey.rb APPEND=true
 #	Running 'rake surveyor ...' will parse your survey file
 #	and generate several yml files in the fixtures dir.
 #	Without the APPEND=true, it will DESTROY the contents
 #	of the survey related tables (surveys, questions, answers,
 #	and a couple others.)  It will not touch responses and 
 #	response_sets.  However, without the questions and 
 #	answers, the responses are pretty useless.  By using
 #	APPEND=true, new surveys, questions, answers, etc.
 #	are APPENDED to the database.  Always APPEND=true.
 #	Unfortunately, the contents of the DB are in the DB.
 #	Duh.  So when we move from dev to prod, we will need
 #	to ensure that we do it correctly!


== Production Installation

As this app is being installed on a VM Java jruby tomcat thing, we need special instructions.  Apparently, for Tomcat 5, we need to use jruby-rack-0.9.6.jar, which is included in lib/.

Tomcat will unarchive the war file and DESTROY the existing unarchived version!  Any file uploads will need to be kept elsewhere.

Before (or after) I recommend migrating the database from somewhere else using the production_prep 'environment'.

 ( warble from a jruby environment to get the jruby specific gems )

 [jakewendt@dev : ucb_ccls_homex ]>
 rake db:migrate RAILS_ENV=production_prep
 # rake app:update RAILS_ENV=production_prep	#	load fixtures?
 bash
 rvm use jruby
 warble
 scp homex.war ccls.berkeley.edu:

 [jakewendt@ccls-01]>
 sudo /sbin/service tomcat5 stop
 sudo su -l tomcat
 /bin/rm -rf /var/lib/tomcat5/webapps/homex
 cp ~jakewendt/homex.war /var/lib/tomcat5/webapps/
 exit

 sudo /sbin/service tomcat5 start
 tail -f /var/log/tomcat5/catalina.out

{Kenai}[http://kenai.com/projects/warbler/pages/Home]

{Berkeley Wiki}[https://wikihub.berkeley.edu/display/istas/Getting+Started+with+JRuby]


== Documentation

Inline documentation is sparse and incomplete, but I'm working on it.

 sudo gem install rdoc --source http://gemcutter.org
 rake doc:plugins
 rake doc:app
 open doc/app/README_rdoc.html

== Testing

An HTML validator like {Validator S.A.C.}[http://habilis.net/validator-sac/] should be installed locally for local HTML page validations.  This can be done over the internet, but can be slow and sometimes timeout.  The <tt>test/test_helper.rb</tt> file can be modified to accomodate this simpley by commenting out the <tt>Html::Test::Validator.w3c_url</tt> line.  See the {html_test documentation}[http://github.com/peter/html_test] for further guidance on this.  

If Validator is not installed or Web Sharing is not enabled, testing will produce many ...

 Errno::ECONNREFUSED: Connection refused - connect(2)

I've made some mods in {html_test_extension}[http://github.com/jakewendt/html_test_extension] to check if a local version is running so this should never happen.

 sudo rake RAILS_ENV=test gems:install
 rake test
	and/or
 autotest		#	does not work in jruby

 # testing fails in rvm/jruby with ...
 #
 #	/Users/jakewendt/.rvm/gems/jruby-1.4.0/gems/ZenTest-4.3.1/lib/zentest.rb
 #	:3:in `each_object': ObjectSpace is disabled; each_object will only work 
 #	with Class, pass -X+O to enable (RuntimeError)
 #
 # ... if ZenTest is included (so autotest won't work either)

== Further Info

{Ruby Best Practices}[http://github.com/sandal/rbp-book/tree/gh-pages/pdfs/]

{FedEx credentials}[http://www.fedex.com/us/developer/index.html]

{RVM on GitHub}[http://github.com/wayneeseguin/rvm]


== To Do

* Fix <tt>expire_fragment "#{request.try(:host_with_port)}#{page_path}"</tt> so that it works without the <tt>try</tt> (not necessary)
* Add to <tt>doc/README_FOR_APP</tt>
* one of the images in rdoc isn't always the correct directory depth and will create a flash error showing this

=== Vaguely related to dos

* Make RDoc auto recognize the following rails commands and group them together under separate headings (like Public Instance Methods, Private Instance Methods, etc.)
  * named_scope
  * validate_*
  * before_*
  * after_*
  * attr_protected
  * attr_accessible
* Make RDoc auto recognize these specific commands and group them together under user definable separate headings (like Public Instance Methods, Private Instance Methods, etc.)
*	so far, rdoc_rails does everything except the Owner relationship of the Aliquot (counter_cache is causing the problem)
* rdoc the rake tasks??
* thickbox-compressed.js has relative location for image which isn't always correct.



== Surveyor Notes / To Do's

* There is no functioning "show" action for surveyor.  There is a route.  There is an action.  There is a view.  It just isn't setup.  Some vars aren't set.  I don't think that they use it.
* There is no "#response.value".  It can be obtained, it just isn't straight forward as there are 8 possible places for it. (answer,string,integer,float,text,datetime,time,date) {They discuss this.}[http://wiki.github.com/breakpointer/surveyor/survey-theory] .  There is a #response.to_s which may actually be what I want. Not quite.  Returns the strings and not my codes as is implied by to_s.
* What is a "#response.unit" ?
* Despite saying "Surveyor will support 4 export formats out of the box", I have seen no mention as to how or where.
* As there isn't a lot of documentation, it raises questions about how I implemented it.  I used "data_export_identifier" to store internal codes for answers and column names for the questions.  I just hope the that field isn't used for something else.
* Response has a "response_other:string" which may be useful, but won't adhere to the number coding presented to me.
* {Surveyor Issue 45}[http://github.com/breakpointer/surveyor/issues/issue/45]
* {Surveyor Issue 46}[http://github.com/breakpointer/surveyor/issues/issue/46]
* {Surveyor Issue 47}[http://github.com/breakpointer/surveyor/issues/issue/47]
* {Surveyor Issue 48}[http://github.com/breakpointer/surveyor/issues/issue/48]
* {Surveyor Issue 49}[http://github.com/breakpointer/surveyor/issues/issue/49]
* {Surveyor Issue 50}[http://github.com/breakpointer/surveyor/issues/issue/50]
* {Surveyor Issue 51}[http://github.com/breakpointer/surveyor/issues/issue/51]


== Credit / Special Thanks

Gradient images made with {Gradient Image Maker}[http://tools.dynamicdrive.com/gradient/]

User icons from {Gravatar}[http://gravatar.com]

{Demo on css rounded corners}[http://css-radius.heroku.com]

{Background image gradients}[http://gradients.glrzad.com/]

{Equal column height example}[http://www.positioniseverything.net/articles/onetruelayout/equalheight]

