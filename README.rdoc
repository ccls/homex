= UC Berkeley, School of Public Health, California Childhood Leukemia Study



== Documentation

Inline documentation is sparse and incomplete, but I'm working on it.

 sudo gem install rdoc --source http://gemcutter.org
 rake doc:plugins
 rake doc:app
 open doc/app/README_rdoc.html

== Required Gems

* {rubycas-client}[http://github.com/gunark/rubycas-client] - CalNet CAS (user authentication)
* {ucb_ldap}[http://gemcutter.org/gems/ucb_ldap] - CalNet LDAP (user information)
* {RedCloth}[http://redcloth.org] - textile parser.
* {aegis}[http://github.com/makandra/aegis] - manage permissions for user accounts in a central place. 
* {active_shipping}[http://github.com/Shopify/active_shipping] - package tracking
* {chronic}[http://chronic.rubyforge.org] - natural language Date/Time parser. (also required for BackgrounDRb)
* {packet}[http://packet.rubyforge.org] - requirement for BackgrounDRb
* {acts_as_list}[http://github.com/ryanb/acts-as-list] - for maintaining order in all things listable
* {validatious-on-rails}[http://github.com/grimen/validatious-on-rails] - CONSIDERING the use of this javascript form validator
* {rcov}[http://github.com/relevance/rcov] - testing
* {mocha}[://github.com/floehopper/mocha] - testing
* {autotest-rails}[http://rubyforge.org/projects/zentest] - testing
* {ZenTest}[http://www.zenspider.com/ZSS/Products/ZenTest/] - testing
* {thoughtbot-factory_girl}[http://github.com/thoughtbot/factory_girl] - testing
* {Surveyor}[http://github.com/breakpointer/surveyor] - for the taking of surveys


== Required and included plugins

* {jrails}[http://github.com/aaronchi/jrails] (pending) - jquery helper methods (trying to not have any inline javascript so may never really use jrails' methods.)
* {html_test}[http://github.com/peter/html_test] - html testing and validation
* {html_test_extension}[http://github.com/jakewendt/html_test_extension] - html testing and validation
* {aegis_extension}[http://github.com/jakewendt/aegis_extension] - modifications, updates and patches for aegis gem.
* {backgroundrb}[http://github.com/gnufied/backgroundrb] - background job server and scheduler
* {acts_as_trackable}[http://github.com/jakewendt/acts_as_trackable] - simple plugin to track the steps in shipping, but could be used for other things
* {rdoc_rails}[http://github.com/jakewendt/rdoc_rails] - simple plugin to add ActiveRecord associations to rdoc


== Installation

 #	Copy session file.
 cp config/initializers/session_store.rb.example config/initializers/session_store.rb

 #	Copy and setup database file.
 cp config/database.yml.example config/database.yml

 #	Copy and add your own FedEx credentials.
 cp config/fed_ex.yml.example config/fed_ex.yml

For standard ruby users ...

 #	If using mysql ...
 # On Mac OS X:
 #   sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql
 # On Mac OS X Leopard:
 #   sudo env ARCHFLAGS="-arch i386" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config
 # ... I had to install the mysql gem like so ...

 sudo env ARCHFLAGS="-arch x86_64" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config

 sudo rake gems:install

For rvm / jruby users, things get a bit more complicated, at least until I figure out how to simplify.  `rake gems:install` does not seem to work in jruby.

 sudo gem install rvm
 /usr/lib/ruby/user-gems/1.8/gems/rvm-0.1.22/bin/rvm-install
 # add ... if [[ -s ~/.rvm/scripts/rvm ]] ; then source ~/.rvm/scripts/rvm ; fi
 vi .bashrc
 vi .bash_profile
 bash
 rvm install jruby
 rvm use jruby
 gem source -a http://gemcutter.org
 gem source -a http://gems.github.com
 gem install rails -v 2.3.4
 gem install aegis RedCloth chronic packet rubycas-client ucb_ldap active_shipping ryanb-acts-as-list rcov mocha 
 gem install autotest-rails ZenTest thoughtbot-factory_girl activerecord-jdbcmysql-adapter jdbc-sqlite3
 
then continue ...

 # Add your own session secret to config/initializers/session_store.rb
 #	generate a 128 character hex string perfect for using as your secret.
 rake secret

 rake db:migrate

 #	add some expected items
 rake app:add_pages
 rake app:add_packages
 rake app:add_users

 script/server
 script/backgroundrb start

 #	login to your app
 #	The first administrator/deputy must be created via the command line.
 #	Others can be created via the command line or web app.
 rake app:deputize uid=<Your CalNet UID>





 #	Install your survey(s)
 rake surveyor FILE=surveys/he_survey.rb APPEND=true
 #	Running 'rake surveyor ...' will parse your survey file
 #	and generate several yml files in the fixtures dir.
 #	Without the APPEND=true, it will DESTROY the contents
 #	of the survey related tables (surveys, questions, answers,
 #	and a couple others.)  It will not touch responses and 
 #	response_sets.  However, without the questions and 
 #	answers, the responses are pretty useless.  By using
 #	APPEND=true, new surveys, questions, answers, etc.
 #	are APPENDED to the database.  Always APPEND=true.
 #	Unfortunately, the contents of the DB are in the DB.
 #	Duh.  So when we move from dev to prod, we will need
 #	to ensure that we do it correctly!

== Testing

An HTML validator like {Validator S.A.C.}[http://habilis.net/validator-sac/] should be installed locally for local HTML page validations.  This can be done over the internet, but can be slow and sometimes timeout.  The <tt>test/test_helper.rb</tt> file can be modified to accomodate this simpley by commenting out the <tt>Html::Test::Validator.w3c_url</tt> line.  See the {html_test documentation}[http://github.com/peter/html_test] for further guidance on this.  

If Validator is not installed or Web Sharing is not enabled, testing will produce many ...

 Errno::ECONNREFUSED: Connection refused - connect(2)

I've made some mods to check if a local version is running so this should never happen.

Currently, the Package tests would need removed to test offline as they access the FedEx API.

 rake RAILS_ENV=test gems:install
 rake test
	and/or
 autotest		#	does not work in jruby


== Further Info

{Ruby Best Practices}[http://github.com/sandal/rbp-book/tree/gh-pages/pdfs/]

{Adapting a Web Application to Interoperate with CAS}[https://calnet.berkeley.edu/developers/developerResources/cas/CASAppSetup.html]

{UCB CAS Registration}[https://calnet.berkeley.edu/developers/developerResources/cas/CASRegistration.html]

{UCB LDAP Registration}[https://calnet.berkeley.edu/developers/developerResources/applyingForAccess/ldap.html]

{Ruby CAS Client Gem on GitHub}[http://github.com/gunark/rubycas-client/tree/master/examples/rails/]

{Ruby CAS Client Documentation}[http://rubycas-client.rubyforge.org/]

{UCB LDAP Gem on GemCutter}[http://gemcutter.org/gems/ucb_ldap]

{UCB LDAP Documentation}[http://ucbrb.rubyforge.org/ucb_ldap/]

{Chronic Documentation}[http://chronic.rubyforge.org/]

{RedCloth Textile Documentation}[http://redcloth.org/]

{Aegis Permissions on GitHub}[http://github.com/makandra/aegis]

{Aegis Extension Plugin on GitHub}[http://github.com/jakewendt/aegis_extension]

{Active Shipping on GitHub}[http://github.com/Shopify/active_shipping]

{BackgrounDRb Home on RubyForge}[http://backgroundrb.rubyforge.org]

{BackgrounDRb Home on GitHub}[http://github.com/gnufied/backgroundrb]

{FedEx credentials}[http://www.fedex.com/us/developer/index.html]

{ActsAsList on GitHub (Ryan Bates' version)}[http://github.com/ryanb/acts-as-list]


== To Do

* Fix <tt>expire_fragment "#{request.try(:host_with_port)}#{page_path}"</tt> so that it works without the <tt>try</tt> (not necessary)
* Add to <tt>doc/README_FOR_APP</tt>
* how to include this file <tt>README.rdoc</tt> into the output of <tt>rake doc:app</tt>
* one of the images in rdoc isn't always the correct directory depth and will create a flash error showing this

=== Vaguely related to dos

* Make RDoc auto recognize the following rails commands and group them together under separate headings (like Public Instance Methods, Private Instance Methods, etc.)
  * named_scope
  * validate_*
  * before_*
  * after_*
  * attr_protected
  * attr_accessible
* Make RDoc auto recognize these specific commands and group them together under user definable separate headings (like Public Instance Methods, Private Instance Methods, etc.)
  * Permissions.role
  * Permissions.permission
  * User.has_role
* The aforementioned auto recognizable commands should work just as an uncommented method works.  It just does!
* Comments in Permissions intended to create metaprogrammed method comments are somehow creating a false class Object with the method inside it.???
*	rdoc shows that ApplicationController includes Authentication twice and not UCB::CAS
*	so far, rdoc_rails does everything except the Owner relationship of the Aliquot (counter_cache is causing the problem)
* rdoc the rake tasks??
* thickbox-compressed.js has relative location for image which isn't always correct.



== Surveyor Notes / To Do's

* There is no functioning "show" action for surveyor.  There is a route.  There is an action.  There is a view.  It just isn't setup.  Some vars aren't set.  I don't think that they use it.
* There is no "#response.value".  It can be obtained, it just isn't straight forward as there are 8 possible places for it. (answer,string,integer,float,text,datetime,time,date) {They discus this.}[http://wiki.github.com/breakpointer/surveyor/survey-theory] .  There is a #response.to_s which may actually be what I want. Not quite.  Returns the strings and not my codes as is implied by to_s.
* What is a "#response.unit" ?
* I'll need to figure out how to extend the surveyor contoller to control access to survey.
* I'll need to attach the survey to a subject.
* I'll need to restrict the survey to 2 per subject.
* Despite saying "Surveyor will support 4 export formats out of the box", I have seen no mention as to how or where.
* As there isn't a lot of documentation, it raises questions about how I implemented it.  I used "data_export_identifier" to store internal codes for answers and column names for the questions.  I just hope the that field isn't used for something else.
* Response has a "response_other:string" which may be useful, but won't adhere to the number coding presented to me.
* [Issue 45]{http://github.com/breakpointer/surveyor/issues/issue/45}
* [Issue 46]{http://github.com/breakpointer/surveyor/issues/issue/46}
* [Issue 47]{http://github.com/breakpointer/surveyor/issues/issue/47}
